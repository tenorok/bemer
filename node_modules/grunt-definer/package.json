{
  "name": "grunt-definer",
  "description": "Plugin to make modules",
  "version": "0.1.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/tenorok/grunt-definer.git"
  },
  "author": {
    "name": "Artem Kurbatov",
    "email": "mail@tenorok.ru"
  },
  "license": "MIT",
  "dependencies": {
    "definer": "~0.2.0"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-nodeunit": "~0.2.1"
  },
  "scripts": {
    "test": "grunt test"
  },
  "readme": "# grunt-definer\n\n> Grunt-плагин для сборки definer-модулей\n\n## Приступая к работе\n\nДля работы этого плагина требуется Grunt `~0.4.1`.\n\nЕсли вы не использовали [Grunt](http://gruntjs.com/) раньше, то можете ознакомиться с [вступительной инструкцией](http://gruntjs.com/getting-started), в которой объясняется, как добавить [Gruntfile](http://gruntjs.com/sample-gruntfile) в проект.\n\nУстановить этот плагин можно следующей командой:\n\n```shell\nnpm install grunt-definer\n```\n\nПосле установки, можно будет подключить плагин в вашем Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-definer');\n```\n\n## Использование\n\nДля запуска сборки definer-модулей, достаточно выполнить команду: `grunt definer`.\n\nСборка осуществляется с помощью [Definer](https://github.com/tenorok/definer).\n\n### Опции\n\n#### target\n\nТип: `String`\n\n_Обязательный_\n\nОпция указывает путь до файла, в который будет сохранён результат.\n\n#### directory\n\nТип: `String` `String[]`\n\nПо умолчанию: `.`\n\nОпция указывает откуда следует начать искать модули в файловой системе. Поиск модулей выполняется рекурсивно по всем вложенным директориям.\n\nПо умолчанию definer ищет модули в текущей директории.\n\n#### postfix\n\nТип: `String`\n\nПо умолчанию: `js`\n\nОпция задаёт постфикс файлов, в которых будет производиться поиск модулей.\n\n#### module\n\nТип: `String` `Boolean`\n\nПо умолчанию: `false`\n\nОпция позволяет указать имя модуля, для которого необходимо выполнить сборку. В результирующий файл попадут только те модули, которые необходимы для указанного модуля.\n\nПо умолчанию собираются все найденные модули.\n\n#### verbose\n\nТип: `Array`\n\nПо умолчанию: `[]`\n\nОпция настраивает вывод информации о сборке.\n\nИнформация делится на типы:\n\n1. `log` — информация о процессе сборки (синим цветом)\n2. `info` — сообщение о результате сборки (зелёным)\n3. `warn` — предупреждения (жёлтым)\n4. `error` — ошибки (красным)\n\nПо умолчанию выводятся все типы информации.\n\n#### clean\n\nТип: `Object`\n\nПо умолчанию: `{}`\n\nОпция указывает пути до файлов, хранящих переменные глобального контекста.\n\n#### jsdoc\n\nТип: `Object`\n\nПо умолчанию: `{}`\n\nОпция формирует JSDoc, содержащий информацию о собранном файле.\n\n## Примеры\n\n#### Сборка всех модулей\n\nБудут получены все модули из директории `modules/` и сохранены в файл `all.js`.\n\n```js\ndefiner: {\n  all: {\n    target: 'all.js',\n    directory: 'modules/'\n  }\n}\n```\n\n#### Сборка всех модулей и внешних скриптов\n\nКроме модулей, в файл `all.js` будет сохранён jQuery с его плагинами и Underscore.\n\n```js\ndefiner: {\n  all: {\n    target: 'all.js',\n    directory: 'modules/',\n    clean: {\n      $: [\n        'jquery.js',\n        'jquery.ui.js',\n        'jquery.mobile.js'\n      ],\n      _: 'path/to/underscore.js'\n    }\n  }\n}\n```\n\n#### Сборка конкретного модуля\n\nБудут получены модули из файлов `*.module.js`, которые лежат в директориях `modules/` и `modules2/`. Из них будут отобраны модули, необходимые для работы модуля `d` и сохранены в файл `d.js`.\n\n```js\ndefiner: {\n  all: {\n    target: 'd.js',\n    directory: [\n        'modules/',\n        'modules2/'\n    ],\n    module: 'd',\n    postfix: 'module.js'\n  }\n}\n```\n\n#### Сборка с формированием JSDoc\n\nВ собранный файл будет добавлен JSDoc.\n\nТегу `version` установится значение одноимённого поля из файла `package.json`.\n\nТег `date` будет указывать на текущую дату.\n\n```js\ndefiner: {\n  all: {\n    target: 'all.js',\n    directory: 'modules/',\n    jsdoc: {\n      \"file\": \"File description\",\n      \"copyright\": \"2014 Artem Kurbatov, tenorok.ru\",\n      \"license\": \"MIT license\",\n      \"version\": \"package.json\",\n      \"date\": true\n    }\n  }\n}\n```\n\n#### Сборка с настройкой выводящейся информации\n\nСледующий пример будет выводить только предупреждения и ошибки.\n\n```js\ndefiner: {\n  all: {\n    target: 'all.js',\n    directory: 'modules/',\n    verbose: ['warn', 'error']\n  }\n}\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/tenorok/grunt-definer/issues"
  },
  "homepage": "https://github.com/tenorok/grunt-definer",
  "_id": "grunt-definer@0.1.0",
  "_from": "grunt-definer@~0.1.0"
}
