{
  "name": "molotok",
  "description": "Helpers for enjoying the development.",
  "version": "0.1.0-alpha.2",
  "repository": {
    "type": "git",
    "url": "https://github.com/tenorok/molotok.git"
  },
  "author": {
    "name": "Artem Kurbatov",
    "email": "mail@tenorok.ru"
  },
  "license": "MIT",
  "devDependencies": {
    "git-hooks": "~0.0.6",
    "jsdoc": "v3.3.0-alpha8",
    "chai": "~1.8.1",
    "jscs": "~1.2.4",
    "grunt-prompt": "~1.1.0",
    "grunt": "~0.4.2",
    "load-grunt-tasks": "~0.4.0",
    "grunt-cli": "~0.1.13",
    "grunt-definer": "~0.1.0",
    "grunt-mocha-test": "~0.9.1",
    "grunt-shell": "~0.7.0",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-mkdir": "~0.1.1",
    "grunt-contrib-uglify": "~0.4.0"
  },
  "readme": "# Molotok — набор помощников для эффективной разработки\n\nДля организации модулей используется [definer](https://github.com/tenorok/definer).\n\n[Документация в JSDoc](http://tenorok.github.io/molotok/jsdoc/module-is-is.html).\n\nГотовые файлы:\n\n* [molotok.js](http://tenorok.github.io/molotok/release/molotok.js)\n* [molotok.min.js](http://tenorok.github.io/molotok/release/molotok.min.js)\n\n\n\n## Установка\n\nMolotok доступен в [Bower](http://bower.io).\n\n    bower install molotok\n\nMolotok доступен в [NPM](https://www.npmjs.org).\n\n    npm install molotok\n\n## Подключение\n\n### В браузере\n\n```html\n<script src=\"bower_components/molotok/molotok.min.js\"></script>\n```\n\n### В Node.js\n\n```js\nvar molotok = require('molotok');\n```\n\n## Модули\n\n- [Модуль `is`](#Модуль-is)\n  - [Методы для проверки на определённый тип данных](#Методы-для-проверки-на-определённый-тип-данных)\n  - [Метод `is.type`](#Метод-istype)\n  - [Методы для проверки чисел](#Методы-для-проверки-чисел)\n  - [Метод `is.primitive`](#Метод-isprimitive)\n  - [Метод `is.every`](#Метод-isevery)\n- [Модуль `string`](#Модуль-string)\n  - [Метод `string.escape`](#Метод-stringescape)\n  - [Метод `string.htmlEscape`](#Метод-stringhtmlescape)\n  - [Метод `string.unHtmlEscape`](#Метод-stringunhtmlescape)\n  - [Метод `string.collapse`](#Метод-stringcollapse)\n  - [Метод `string.stripTags`](#Метод-stringstriptags)\n  - [Метод `string.upper`](#Метод-stringupper)\n  - [Метод `string.lower`](#Метод-stringlower)\n  - [Метод `string.repeat`](#Метод-stringrepeat)\n- [Модуль `number`](#Модуль-number)\n  - [Метод `number.random`](#Метод-numberrandom)\n- [Модуль `object`](#Модуль-object)\n  - [Метод `object.extend`](#Метод-objectextend)\n  - [Метод `object.deepExtend`](#Метод-objectdeepextend)\n  - [Метод `object.clone`](#Метод-objectclone)\n  - [Метод `object.deepClone`](#Метод-objectdeepclone)\n- [Модуль `functions`](#Модуль-functions)\n  - [Метод `functions.apply`](#Метод-functionsapply)\n\n### Модуль `is`\n\nКаждый из методов модуля `is` принимает неограниченное количество параметров.\n\n#### Методы для проверки на определённый тип данных\n\nЕсли все переданные параметры принадлежат типу данных, на который осуществляется\nпроверка, методы возвращают `true`, иначе `false`.\n\nПараметры:\n\n* `{...*}` `subject` — параметры\n\nВозвращают: `{boolean}`\n\nСписок методов для проверки на определённый тип данных:\n\n* `is.string` — строка\n* `is.number` — число\n* `is.nan` — NaN\n* `is.boolean` — логический тип\n* `is.null` — null\n* `is.undefined` — undefined\n* `is.date` — дата\n* `is.regexp` — регулярное выражение\n* `is.array` — массив\n* `is.map` — простой объект (хэш, карта)\n* `is.argument` — аргументы функции\n* `is.function` — функция\n* `is.native` — системная функция\n\n#### Метод `is.type`\n\nОпределяет тип переданных параметров.\n\nВозвращает строку, соответствущую имени одного из методов для проверки\nна определённый тип данных, которые перечислены выше.\n\nВозвращает `mixed`, если были переданы параметры разных типов данных.\n\nПараметры:\n\n* `{...*}` `subject` — параметры\n\nВозвращает: `{string}`\n\n#### Методы для проверки чисел\n\nПроверяют параметры на число определённого вида.\n\nПараметры:\n\n* `{...*}` `subject` — параметры\n\nВозвращают: `{boolean}`\n\nСписок методов для проверки чисел:\n\n* `is.integer` — целое число\n* `is.float` — дробное число\n\n#### Метод `is.primitive`\n\nПроверяет параметры на примитивные типы данных.\n\nВ примитивные типы входят: string, number, NaN, boolean, null, undefined.\n\nПараметры:\n\n* `{...*}` `subject` — параметры\n\nВозвращает: `{boolean}`\n\n#### Метод `is.every`\n\nПроверяет параметры на единый тип данных.\n\nВозвращает `true`, если все переданные параметры относятся\nк одному типу данных, иначе `false`.\n\nПараметры:\n\n* `{...*}` `subject` — параметры\n\nВозвращает: `{boolean}`\n\n### Модуль `string`\n\n#### Метод `string.escape`\n\nЭкранирует строку текста.\n\nПредваряет дополнительным слешом: слеш, кавычки,\nсимволы перевода строки, каретки и табуляции.\n\nПараметры:\n\n* `{string}` `string` — строка\n\nВозвращает: `{string}`\n\n#### Метод `string.htmlEscape`\n\nЭкранирует HTML-строку.\n\nЗаменяет на HTML-сущности: амперсанд, угловые скобки и кавычки.\n\nСодержимое экранируется автоматически для любой БЭМ-сущности.\n\nПараметры:\n\n* `{string}` `string` — строка\n\nВозвращает: `{string}`\n\n#### Метод `string.unHtmlEscape`\n\nДеэкранирование HTML-строки.\n\nПараметры:\n\n* `{string}` `string` — строка\n\nВозвращает: `{string}`\n\n#### Метод `string.collapse`\n\nУдаляет повторяющиеся пробелы.\n\nПараметры:\n\n* `{string}` `string` — строка\n\nВозвращает: `{string}`\n\n#### Метод `string.stripTags`\n\nВырезает HTML-теги.\n\nПараметры:\n\n* `{string}` `string` — строка\n\nВозвращает: `{string}`\n\n#### Метод `string.upper`\n\nПереводит всю строку или заданный символ в верхний регистр.\n\nПараметры:\n\n* `{string}` `string` — строка\n* `{number}` `[index]` — порядковый номер символа\n\nВозвращает: `{string}`\n\n#### Метод `string.lower`\n\nПереводит всю строку или заданный символ в нижний регистр.\n\nПараметры:\n\n* `{string}` `string` — строка\n* `{number}` `[index]` — порядковый номер символа\n\nВозвращает: `{string}`\n\n#### Метод `string.repeat`\n\nПовторяет строку заданное количество раз с указанным разделителем\n\nПараметры:\n\n* `{string}` `string` — строка\n* `{number}` `n` — количество повторений\n* `{string}` `[separator]` — разделитель, по умолчанию отсутствует\n\nВозвращает: `{string}`\n\n### Модуль `number`\n\n#### Метод `number.random`\n\nВозвращает случайное число.\n\nПри вызове без аргументов возвращает случайное дробное число от 0 до 1.\n\nПри вызове с указанием минимума и максимума возвращает дробное число из этого промежутка.\n\nПри вызове со всеми тремя аргументами возвращает число из заданного промежутка, делящееся без остатка на указанный шаг.\n\nПараметры:\n\n* `{number}` `[min]` — минимум\n* `{number}` `[max]` — максимум\n* `{number}` `[step]` — шаг\n\nВозвращает: `{number}`\n\n### Модуль `object`\n\n#### Метод `object.extend`\n\nРасширяет объект.\n\nПараметры:\n\n* `{object}` `object` — расширяемый объект\n* `{...object}` `source` — расширяющие объекты в любом количестве\n\nВозвращает: `{object}`\n\n#### Метод `object.deepExtend`\n\nРасширяет объект рекурсивно.\n\nПараметры:\n\n* `{object}` `object` — расширяемый объект\n* `{...object}` `source` — расширяющие объекты в любом количестве\n\nВозвращает: `{object}`\n\n#### Метод `object.clone`\n\nКлонирует объект.\n\nПараметры:\n\n* `{object}` `object` — клонируемый объект\n\nВозвращает: `{object}`\n\n#### Метод `object.deepClone`\n\nКлонирует объект рекурсивно.\n\nПараметры:\n\n* `{object}` `object` — клонируемый объект\n\nВозвращает: `{object}`\n\n### Модуль `functions`\n\n#### Метод `functions.apply`\n\nСоздаёт экземпляр класса с помощью apply.\n\nПараметры:\n\n* `{Function}` `constructor` — класс\n* `{array}` `args` — массив аргументов\n\nВозвращает: `{Object}` — экземпляр класса\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/tenorok/molotok/issues"
  },
  "homepage": "https://github.com/tenorok/molotok",
  "_id": "molotok@0.1.0-alpha.2",
  "_from": "molotok@~0.1.0"
}
